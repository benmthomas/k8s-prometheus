apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        templateCategory: thirdparty
        app: rabbitmq
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '15692'
        prometheus.io/scrape: 'true'
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.8.4
          resources:
            limits:
              memory: "1Gi"
            requests:
              memory: "1Gi"
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: ["/bin/sh", "-c", "rabbitmq-plugins --offline enable rabbitmq_prometheus"]
          ports:
            - containerPort: 5672
            - containerPort: 15672
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-data
            - mountPath: /rabbitmq
              name: rabbitmq-plugins-volume
          env:
            - name: RABBITMQ_ENABLED_PLUGINS_FILE
              value: /rabbitmq/enabled_plugins
      volumes:
        - name: rabbitmq-data
          emptyDir: {}
        - name: rabbitmq-plugins-volume
          configMap:
            # defaultMode: 0777           
            name: rabbitmq-plugins-conf
            items:
              - key: enabled_plugins
                path: enabled_plugins      
      restartPolicy: Always
      # nodeSelector:
      #   env: monitoring
    